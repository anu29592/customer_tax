# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Security,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    app.security.hash.password.listener:
        class: App\Service\HashPasswordService
        tags:
            - { name: doctrine.event_subscriber }

    app.security.limit_login.storage:
        class: App\Service\CustomerSessionStorage

    app.security.authentication.handler.authentication_success:
        class: App\Security\Authentication\AuthenticationSuccessHandler
        arguments:
            - '@lexik_jwt_authentication.jwt_manager'
            - '@event_dispatcher'
            - '@App\Repository\CustomerContractRepository'
            - '@doctrine.orm.entity_manager'
            - '@app.security.limit_login.storage'
        tags:
            - { name: monolog.logger, channel: security }


    app.security.authentication.handler.authentication_failure:
        class: App\Security\Authentication\AuthenticationFailureHandler
        arguments:
            - '@event_dispatcher'
            - '@App\Repository\CustomerContractRepository'
            - '@doctrine.orm.entity_manager'
            - '@app.security.limit_login.storage'
        tags:
            - { name: monolog.logger, channel: security }

#
#
#    app.repository.customer:
#        class: Doctrine\ORM\EntityRepository
#        factory: ['@doctrine.orm.default_entity_manager', getRepository]
#        arguments:
#            - App\Entity\Customer
#
#    app.validator.customer_id:
#        class: App\Validator\Constraints\CustomerIdValidator
#        tags:
#            - { name: validator.constraint_validator, alias: app.validator.customer_id}
#        arguments:
#            - { type: service, id: }
#

