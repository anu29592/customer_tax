swagger: '2.0'
info:
  title: Tax Info Middleware
  description: Tax Info Middleware for manage the tax related information from customers / partners
  version: 1.0.0
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: j.pratllabres@akf.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: akf.middleware:8888
basePath: /taxId/v1
tags:
  - name: customer
    description: Operations about customer

schemes:
  - https
  - http
paths:
  '/customers':
    get:
      tags:
        - customers list
      summary: Get customers
      description: ''
      operationId: getCustomersList
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          description: ''
          required: false
          default: 1000
          type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'

        400:
          description: Invalid customerId supplied
        404:
          description: Customer not found
  '/customers/{customerId}':
    get:
      tags:
        - customer
      summary: Get customer by customer id
      description: ''
      operationId: getCustomer
      produces:
        - application/json
      parameters:
        - name: customerId
          in: path
          description: 'The name that needs to be fetched. Use customer for testing. '
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Customer'
        400:
          description: Invalid customerId supplied
        404:
          description: Customer not found
    patch:
      tags:
        - customer change set
      summary: Send changeset from customer
      description: This can only be done by the logged in customer.
      operationId: createCustomerChangeset
      produces:
        - application/xml
        - application/json
      parameters:
        - name: customerId
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated customer object
          required: true
          schema:
            $ref: '#/definitions/CustomerChangeSet'
      responses:
        400:
          description: Invalid customer supplied
        404:
          description: Customer not found
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Customer:
    type: object
    properties:
      customerId:
        type: string
      customerType:
        type: string
        enum:
          - privat
          - individualBusiness
          - businessAssociation
          - corporation

      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      taxId:
        type: string
      taxEconomicId:
        type: string
      partners:
        type: array
        items:
          $ref: "#/definitions/Partner"
      contractNumbers:
        type: array
        items:
          $ref: "#/definitions/ContractNumber"
    xml:
      name: Customer
  Partner:
    type: object
    properties:
      id:
        type: integer
        format: int64
      partnerType:
        type: string
        enum:
          - beneficialOwner
          - fictiveBeneficialOwner
      firstName:
        type: string
      lastName:
        type: string
      taxNumber:
        type: string

  PartnerChangeSet:

    type: object
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: object
        properties:
          previous:
            type: string
          new:
            type: string
      lastName:
        type: object
        properties:
          previous:
            type: string
          new:
            type: string
      taxNumber:
        type: object
        properties:
          previous:
            type: string
          new:
            type: string


  ContractNumber:
    type: object
    properties:
      id:
        type: integer
        format: int64
      customerId:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: ContractNumber
  CustomerChangeSet:
    type: object
    properties:
      firstName:
        type: object
        properties:
          previous:
            type: string
          new:
            type: string
      lastName:
        type: object
        properties:
          previous:
            type: string
          new:
            type: string
      email:
        type: object
        properties:
          previous:
            type: string
          new:
            type: string
      taxId:
        type: object
        properties:
          previous:
            type: string
          new:
            type: string
      taxEconomicIdentificationNumber:
        type: object
        properties:
          previous:
            type: string
          new:
            type: string
      partners:
        type: array
        items:
          $ref: "#/definitions/PartnerChangeSet"

    xml:
      name: CustomerChangeSet

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
